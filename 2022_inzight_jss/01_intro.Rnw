\section{Introduction}\label{sec:intro}

The open-source statistical programming environment \proglang{R} \citep{rcore}, used throughout statistics and data science, is supported by a repository of thousands of free packages providing access to the latest statistical techniques, graphics, and everything in between.
Several packages provide \glspl{gui} that allow non-programmers to interact with \proglang{R} without necessarily grappling with code.
These \glspl{gui} empower a broad audience to create graphs, test hypotheses, and access other statistical methods that were previously accessible only to \proglang{R} coders.
Two prominent examples are \proglang{R} Commander \citep{Rcommander,Fox_2016} and \pkg{Deducer} \citep{Deducer}.
\proglang{R} Commander is a self-contained interface that displays, writes, and runs user-editable \proglang{R}~code.
\pkg{Deducer} extends the \proglang{R} console with menus that open \gls{gui} interfaces for various statistical methods.
\citeauthor{Muenchen_2020} \citeyearpar{Muenchen_2020b,Muenchen_2020} provides a detailed review of these and other \gls{gui} interfaces to \proglang{R}, including BlueSky Statistics \citep{BlueSky}, Jamovi \citep{jamovi}, and \pkg{RKWard} \citep{RKWard}.
These tools have point-and-click interfaces that let users perform a set of procedures without the need to recall the \proglang{R} function and argument names.
However, they do require prior knowledge of the names of the underlying statistical procedures they want to invoke, what they do, and how to use them.

This paper introduces \pkg{iNZight}, another \gls{gui} system written in \proglang{R} consisting of a collection of \proglang{R} packages bringing data visualisation and analysis to an even wider audience.
The name \pkg{iNZight} is a play-on-words blending the word ``insight'' with the initials of our home country of New~Zealand.
The ability to gain insights by exploring, visualizing, and analysing data without prior knowledge of statistical procedures is \pkg{iNZight}'s foundational design principle and the primary point of difference from other \proglang{R} \gls{gui} interfaces.
This principle extends to handling specific types of data, such as those generated by complex surveys:
with \pkg{iNZight}, users do not need to worry about the underlying structure as the software handles it automatically behind the scenes.

A fundamental difference between \pkg{iNZight} and other \proglang{R} \glspl{gui} is its broader and less technically-skilled audience.
We cater to students new to statistics and analysts and researchers in community groups and government agencies with various requirements and skill levels.
We use simple design principles to engage our audience and democratise data analysis skills by minimising the demand for up-front knowledge---the names of tests and
procedures, for example---and replace it with up-front information easily accessed through contextual dialogues.
These principles led to \pkg{iNZight} using a ``variable first'' approach.
Users select the variables they are interested in and the software automatically produces outputs based on a set of defaults.
This facilitates and encourages rapid data exploration.
\Cref{sec:design-principles} includes further details on the design principles behind \pkg{iNZight}.

\pkg{iNZight} has been adopted throughout New Zealand's statistical education programs, from the year~9 (age 13) school curriculum to postgraduate statistics courses in teaching institutions around the country.
In addition, the combination of \pkg{iNZight}'s simplicity and powerful toolset make it a popular choice for research organisations and national statistics offices, including the Australian Bureau of Statistics\footnote{\url{https://www.abs.gov.au/}} and Statistics NZ.\footnote{\url{https://www.stats.govt.nz/}}
The same free statistical software can be used from high school through to research environments, creating a simplified pathway for the development of future statistical analysts.
This paper provides an overview of \pkg{iNZight}'s design principles (\cref{sec:design-principles}), main features (\cref{sec:features}), technical details of its development (\cref{sec:technical}), an introduction to the \emph{add-on} system (\cref{sec:addons}), and a description of the installation process (\cref{sec:installation}).
